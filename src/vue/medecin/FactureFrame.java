/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package vue.medecin;

import contrat.IDao;
import factory.FactoryDao;
import java.awt.print.PrinterException;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.DateFormat;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import metier.facturation.Facture;
import metier.patient.DossierMedical;
import metier.patient.DossierPatient;
import metier.personnel.Medecin;

/**
 *
 * @author Samia
 */
public class FactureFrame extends javax.swing.JInternalFrame {

    private Medecin medecin; //Reutilisation des infos user
    private Vector p; 
    private DossierPatient dp; 
    private DefaultTableModel tableModel;
    private ResultSet res;
    private ResultSetMetaData meta;
    /**
     * Creates new form Facture
     */
    public FactureFrame(Medecin m) {
        initComponents();
        initListPatient(m); //Permet l'affichage de la liste
        this.setVisible(true);
    }

     public void initListPatient(Medecin m){
        this.jListPatient.clearSelection();
        //Reccuperation de l'ensemble des dossier Medicaux selon l'id de l'user
        IDao dao = FactoryDao.getDAO("DossierPatient");
        p = new Vector<>(dao.selectAll(m)); 
        
        
        this.jListPatient.setListData(p);   //Chargement de la liste

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTActes = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTTarif = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListPatient = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLMessage = new javax.swing.JLabel();
        jBImprimer = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel2.setText("Actes");

        jLabel3.setText("Tarif");

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jListPatient.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jListPatient.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListPatientValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListPatient);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Actes", "Montant", "Date"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jLabel4.setText("Facture ");

        jButton2.setText("Paiement Im√©diat");

        jBImprimer.setText("Imprimer");
        jBImprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBImprimerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTTarif, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(32, 32, 32)
                                .addComponent(jTActes, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(97, 97, 97))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBImprimer)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTActes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTTarif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1)
                            .addComponent(jLMessage))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jBImprimer))
                .addContainerGap(100, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jListPatientValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListPatientValueChanged
        try {
            // TODO: Revoir pourquoi il manque une ligne
            
            DossierPatient dp = (DossierPatient) this.jListPatient.getSelectedValue(); 
            //lors d'une selection d'un √©l√©meent remet les champs √† vide
            jLMessage.setText("");
            jTActes.setText("");
            jTTarif.setText("");
            
            //Appel du daoFacture pour afficher les factures par dossierPatient
            IDao dao = FactoryDao.getDAO("Facture");
            res = dao.selectRetunRes(dp.getId_dossierPatient());
           
            //Modele du tableau √† vide
            this.tableModel= new DefaultTableModel();
            this.jTable1.setModel(tableModel);
            
            //si le resultat n'est pas vide renvoi vrai
            if(res.next()) {
             //Generation du tableau de facture   
            meta = res.getMetaData();

            String[] tHeader = new String[meta.getColumnCount()];
            
            for (int i = 0; i < tHeader.length; i++) {
                tHeader[i]= meta.getColumnName(i+1);
            }
            
            res.last();
            
            int nbrLigne = res.getRow()-1;
            res.first();
            
            Object [][] t = new Object[nbrLigne][meta.getColumnCount()];
            
            for (int i = 0; i < nbrLigne; i++) {
                res.next();
                
                for (int j = 0; j < meta.getColumnCount(); j++) {
                    
                    t[i][j]= res.getString(j+1);
                }
  
            this.tableModel= new DefaultTableModel(t, tHeader);
            this.jTable1.setModel(tableModel);
            }
            
            }
        } catch (SQLException ex) {
            Logger.getLogger(FactureFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jListPatientValueChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DossierPatient dp = (DossierPatient) this.jListPatient.getSelectedValue(); 
        Facture f = new Facture();
        IDao daoA = FactoryDao.getDAO("Facture"); //Appel de la daoDossierPattient via la factory
        java.sql.Date uDate = new java.sql.Date((new java.util.Date()).getTime());
       
         f.setId_patient(dp.getId_dossierPatient());
         f.setId_medecin(dp.getId_user());
         f.setDate((Date) uDate);
         f.setActes(jTActes.getText());
         f.setMontant(jTTarif.getText());
         daoA.insert(f);
         jLMessage.setText("Votre actes √† √©t√© ins√©rer");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jBImprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBImprimerActionPerformed
        // TODO add your handling code here:
  //Permet d'imprimer le document
        try {
            // TODO add your handling code here:
            jTable1.print();
        } catch (PrinterException ex) {
            Logger.getLogger(GestionDocument.class.getName()).log(Level.SEVERE, null, ex);
        }      
        
    }//GEN-LAST:event_jBImprimerActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBImprimer;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLMessage;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList jListPatient;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTActes;
    private javax.swing.JTextField jTTarif;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
